<!-- Collection Template -->
<div class="collection-page">
  
  <!-- Collection Header -->
  <section class="collection-header">
    <div class="container">
      {% if collection.image %}
        <div class="collection-header__image">
          <img src="{{ collection.image | image_url: width: 1200 }}" alt="{{ collection.title }}" loading="lazy">
        </div>
      {% endif %}
      
      <div class="collection-header__content">
        <nav class="breadcrumb" aria-label="Breadcrumb">
          <ol>
            <li><a href="/">Home</a></li>
            <li><a href="/collections">Collections</a></li>
            <li aria-current="page">{{ collection.title }}</li>
          </ol>
        </nav>
        
        <h1 class="collection-header__title">{{ collection.title }}</h1>
        
        {% if collection.description != blank %}
          <div class="collection-header__description">
            {{ collection.description }}
          </div>
        {% endif %}
        
        <div class="collection-header__meta">
          <span class="collection-header__count">
            {% if collection.products_count == 1 %}
              1 product
            {% else %}
              {{ collection.products_count }} products
            {% endif %}
          </span>
        </div>
      </div>
    </div>
  </section>

  <!-- Collection Content -->
  <section class="collection-content">
    <div class="container">
      
      <!-- Filters and Sort -->
      <div class="collection-toolbar">
        <div class="collection-toolbar__left">
          <!-- Filter Toggle (Mobile) -->
          <button class="filter-toggle btn btn-secondary" type="button" aria-expanded="false" aria-controls="collection-filters">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
            </svg>
            Filters
          </button>
          
          <!-- Active Filters -->
          <div class="active-filters">
            {% for tag in current_tags %}
              <span class="active-filter">
                {{ tag }}
                <a href="{{ collection.url }}/{{ current_tags | join: '+' | remove: tag | remove: '++' | replace: '++', '+' }}" class="active-filter__remove" aria-label="Remove {{ tag }} filter">×</a>
              </span>
            {% endfor %}
            
            {% if current_tags.size > 0 %}
              <a href="{{ collection.url }}" class="clear-filters">Clear all</a>
            {% endif %}
          </div>
        </div>
        
        <div class="collection-toolbar__right">
          <!-- Sort Options -->
          <div class="sort-options">
            <label for="sort-by" class="sort-label">Sort by:</label>
            <select id="sort-by" class="sort-select" onchange="location.href = this.value">
              <option value="{{ collection.url }}?sort_by=created-descending"{% if collection.sort_by == 'created-descending' %} selected{% endif %}>Newest first</option>
              <option value="{{ collection.url }}?sort_by=created-ascending"{% if collection.sort_by == 'created-ascending' %} selected{% endif %}>Oldest first</option>
              <option value="{{ collection.url }}?sort_by=price-ascending"{% if collection.sort_by == 'price-ascending' %} selected{% endif %}>Price: Low to High</option>
              <option value="{{ collection.url }}?sort_by=price-descending"{% if collection.sort_by == 'price-descending' %} selected{% endif %}>Price: High to Low</option>
              <option value="{{ collection.url }}?sort_by=title-ascending"{% if collection.sort_by == 'title-ascending' %} selected{% endif %}>A-Z</option>
              <option value="{{ collection.url }}?sort_by=title-descending"{% if collection.sort_by == 'title-descending' %} selected{% endif %}>Z-A</option>
              <option value="{{ collection.url }}?sort_by=best-selling"{% if collection.sort_by == 'best-selling' %} selected{% endif %}>Best selling</option>
            </select>
          </div>
        </div>
      </div>

      <div class="collection-main">
        
        <!-- Sidebar Filters -->
        <aside class="collection-sidebar" id="collection-filters">
          <div class="filter-section">
            <button class="filter-section__close" aria-label="Close filters">×</button>
            <h3 class="filter-section__title">Filter Products</h3>
            
            <!-- Price Range Filter -->
            <div class="filter-group">
              <h4 class="filter-group__title">Price Range</h4>
              <div class="price-range">
                <input type="range" id="price-min" class="price-range__input" min="0" max="1000" value="0">
                <input type="range" id="price-max" class="price-range__input" min="0" max="1000" value="1000">
                <div class="price-range__values">
                  <span>$<span id="price-min-value">0</span></span>
                  <span>$<span id="price-max-value">1000</span></span>
                </div>
              </div>
            </div>
            
            <!-- Product Type Filter -->
            {% assign product_types = collection.all_products | map: 'type' | uniq | compact %}
            {% if product_types.size > 1 %}
            <div class="filter-group">
              <h4 class="filter-group__title">Product Type</h4>
              <div class="filter-options">
                {% for type in product_types %}
                  <label class="filter-option">
                    <input type="checkbox" value="{{ type | handle }}" class="filter-checkbox">
                    <span class="filter-option__label">{{ type }}</span>
                  </label>
                {% endfor %}
              </div>
            </div>
            {% endif %}
            
            <!-- Vendor Filter -->
            {% assign vendors = collection.all_products | map: 'vendor' | uniq | compact %}
            {% if vendors.size > 1 %}
            <div class="filter-group">
              <h4 class="filter-group__title">Brand</h4>
              <div class="filter-options">
                {% for vendor in vendors %}
                  <label class="filter-option">
                    <input type="checkbox" value="{{ vendor | handle }}" class="filter-checkbox">
                    <span class="filter-option__label">{{ vendor }}</span>
                  </label>
                {% endfor %}
              </div>
            </div>
            {% endif %}
            
            <!-- Tags Filter -->
            {% assign all_tags = collection.all_tags %}
            {% if all_tags.size > 0 %}
            <div class="filter-group">
              <h4 class="filter-group__title">Categories</h4>
              <div class="filter-options">
                {% for tag in all_tags limit: 10 %}
                  <label class="filter-option">
                    <input type="checkbox" value="{{ tag | handle }}" class="filter-checkbox" {% if current_tags contains tag %}checked{% endif %}>
                    <span class="filter-option__label">{{ tag }}</span>
                  </label>
                {% endfor %}
              </div>
            </div>
            {% endif %}
            
            <div class="filter-actions">
              <button class="btn btn-primary apply-filters">Apply Filters</button>
              <button class="btn btn-secondary clear-filters">Clear All</button>
            </div>
          </div>
        </aside>

        <!-- Products Grid -->
        <div class="collection-products">
          {% if collection.products.size > 0 %}
            <div class="products-grid grid grid-{{ settings.products_per_row | default: 3 }}">
              {% for product in collection.products %}
                {% render 'product-card', product: product %}
              {% endfor %}
            </div>
            
            <!-- Pagination -->
            {% if paginate.pages > 1 %}
              <nav class="pagination" aria-label="Pagination">
                {% render 'pagination', paginate: paginate %}
              </nav>
            {% endif %}
            
          {% else %}
            <!-- Empty State -->
            <div class="collection-empty">
              <div class="collection-empty__icon">
                <svg width="64" height="64" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              </div>
              <h3 class="collection-empty__title">No products found</h3>
              <p class="collection-empty__description">
                {% if current_tags.size > 0 %}
                  Try adjusting your filters or <a href="{{ collection.url }}">clear all filters</a>.
                {% else %}
                  This collection is currently empty, but check back soon for new items!
                {% endif %}
              </p>
              {% if current_tags.size > 0 %}
                <a href="{{ collection.url }}" class="btn btn-primary">Clear Filters</a>
              {% else %}
                <a href="/collections/all" class="btn btn-primary">Browse All Products</a>
              {% endif %}
            </div>
          {% endif %}
        </div>
        
      </div>
    </div>
  </section>

</div>

<!-- Pagination wrapper for proper context -->
{% paginate collection.products by 24 %}
  <!-- Products are rendered above -->
{% endpaginate %}

<style>
/* Collection Page Styles */
.collection-page {
  min-height: calc(100vh - 200px);
}

/* Collection Header */
.collection-header {
  position: relative;
  background: linear-gradient(135deg, var(--color-primary) 0%, rgba(26, 54, 93, 0.9) 100%);
  color: white;
  padding: 2rem 0;
}

.collection-header__image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

.collection-header__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0.3;
}

.collection-header__content {
  position: relative;
  z-index: 1;
}

/* Breadcrumb */
.breadcrumb ol {
  list-style: none;
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
  font-size: 0.875rem;
}

.breadcrumb li:not(:last-child)::after {
  content: '>';
  margin-left: 0.5rem;
  opacity: 0.6;
}

.breadcrumb a {
  color: rgba(255,255,255,0.8);
  text-decoration: none;
}

.breadcrumb a:hover {
  color: white;
}

.collection-header__title {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: white;
}

.collection-header__description {
  font-size: 1.125rem;
  margin-bottom: 1rem;
  opacity: 0.9;
  max-width: 600px;
}

.collection-header__meta {
  font-size: 0.875rem;
  opacity: 0.8;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Collection Content */
.collection-content {
  padding: 3rem 0;
}

/* Toolbar */
.collection-toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.collection-toolbar__left {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.filter-toggle {
  display: none;
  align-items: center;
  gap: 0.5rem;
}

.active-filters {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.active-filter {
  background: var(--color-primary);
  color: white;
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.active-filter__remove {
  color: white;
  text-decoration: none;
  font-weight: bold;
  margin-left: 0.25rem;
}

.clear-filters {
  color: var(--color-primary);
  text-decoration: none;
  font-size: 0.875rem;
}

/* Sort Options */
.sort-options {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.sort-label {
  font-weight: 600;
  color: var(--color-primary);
}

.sort-select {
  padding: 0.5rem 1rem;
  border: 2px solid var(--color-secondary);
  border-radius: var(--border-radius);
  background: white;
  min-width: 200px;
}

/* Collection Main */
.collection-main {
  display: grid;
  grid-template-columns: 250px 1fr;
  gap: 2rem;
}

/* Sidebar */
.collection-sidebar {
  background: white;
  border-radius: var(--border-radius);
  padding: 1.5rem;
  box-shadow: var(--shadow);
  height: fit-content;
  position: sticky;
  top: 100px;
}

.filter-section__close {
  display: none;
  background: none;
  border: none;
  font-size: 1.5rem;
  float: right;
  cursor: pointer;
}

.filter-section__title {
  font-size: 1.25rem;
  margin-bottom: 1.5rem;
  color: var(--color-primary);
}

.filter-group {
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid #eee;
}

.filter-group:last-child {
  border-bottom: none;
}

.filter-group__title {
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: var(--color-primary);
}

.filter-options {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.filter-option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  font-size: 0.875rem;
}

.filter-checkbox {
  margin: 0;
  width: auto;
}

/* Price Range */
.price-range {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.price-range__input {
  width: 100%;
}

.price-range__values {
  display: flex;
  justify-content: space-between;
  font-size: 0.875rem;
  font-weight: 600;
}

/* Filter Actions */
.filter-actions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-top: 1.5rem;
}

.filter-actions .btn {
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
}

/* Products Grid */
.collection-products {
  min-height: 400px;
}

.products-grid {
  margin-bottom: 3rem;
}

/* Empty State */
.collection-empty {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--color-secondary);
}

.collection-empty__icon {
  margin-bottom: 1.5rem;
  color: var(--color-primary);
}

.collection-empty__title {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: var(--color-primary);
}

.collection-empty__description {
  margin-bottom: 2rem;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

/* Pagination */
.pagination {
  margin-top: 3rem;
}

/* Responsive Design */
@media (max-width: 1024px) {
  .collection-main {
    grid-template-columns: 1fr;
  }
  
  .collection-sidebar {
    position: fixed;
    top: 0;
    left: -100%;
    width: 300px;
    height: 100vh;
    z-index: var(--z-modal);
    transition: left var(--transition);
    overflow-y: auto;
  }
  
  .collection-sidebar.active {
    left: 0;
  }
  
  .filter-toggle {
    display: flex;
  }
  
  .filter-section__close {
    display: block;
  }
}

@media (max-width: 768px) {
  .collection-header__title {
    font-size: 2rem;
  }
  
  .collection-toolbar {
    flex-direction: column;
    align-items: stretch;
  }
  
  .collection-toolbar__left,
  .collection-toolbar__right {
    justify-content: center;
  }
  
  .sort-select {
    min-width: auto;
    width: 100%;
  }
  
  .collection-sidebar {
    width: 100%;
    left: -100%;
  }
}
</style>

<script>
// Collection page functionality
document.addEventListener('DOMContentLoaded', function() {
  // Filter toggle functionality
  const filterToggle = document.querySelector('.filter-toggle');
  const sidebar = document.querySelector('.collection-sidebar');
  const sidebarClose = document.querySelector('.filter-section__close');
  
  if (filterToggle && sidebar) {
    filterToggle.addEventListener('click', function() {
      sidebar.classList.add('active');
      document.body.classList.add('modal-open');
    });
  }
  
  if (sidebarClose && sidebar) {
    sidebarClose.addEventListener('click', function() {
      sidebar.classList.remove('active');
      document.body.classList.remove('modal-open');
    });
  }
  
  // Close sidebar when clicking outside
  document.addEventListener('click', function(e) {
    if (sidebar && sidebar.classList.contains('active') && 
        !sidebar.contains(e.target) && 
        !filterToggle.contains(e.target)) {
      sidebar.classList.remove('active');
      document.body.classList.remove('modal-open');
    }
  });
  
  // Price range functionality
  const priceMin = document.getElementById('price-min');
  const priceMax = document.getElementById('price-max');
  const priceMinValue = document.getElementById('price-min-value');
  const priceMaxValue = document.getElementById('price-max-value');
  
  if (priceMin && priceMax) {
    function updatePriceValues() {
      priceMinValue.textContent = priceMin.value;
      priceMaxValue.textContent = priceMax.value;
      
      // Ensure min doesn't exceed max
      if (parseInt(priceMin.value) > parseInt(priceMax.value)) {
        priceMax.value = priceMin.value;
        priceMaxValue.textContent = priceMax.value;
      }
    }
    
    priceMin.addEventListener('input', updatePriceValues);
    priceMax.addEventListener('input', updatePriceValues);
  }
});
</script>